{"version":3,"sources":["webpack:///src/app/admin/service/services/services.component.html","webpack:///src/app/admin/service/service-routing.module.ts","webpack:///src/app/admin/service/service.module.ts","webpack:///src/app/admin/service/create-service/create-service.component.scss","webpack:///src/app/admin/service/services/services.component.scss","webpack:///src/app/admin/service/services/services.component.ts","webpack:///src/app/admin/service/create-service/create-service.component.html","webpack:///src/app/admin/service/create-service/create-service.component.ts"],"names":["routes","path","data","title","children","component","redirectTo","ServiceRoutingModule","imports","forChild","exports","ServiceModule","declarations","ServicesComponent","as","dtOptions","dtTrigger","services","dtInitial","getServices","getAllServices","subscribe","res","next","error","console","log","id","deleteServiceById","unsubscribe","selector","template","CreateServiceComponent","fb","router","route","toastr","serviceForm","group","required","description","price","service_type","btnText","snapshot","paramMap","get","getService","service","value","updateService","success","navigateByUrl","createService","getServiceById","patchValue","service_types","name"],"mappings":"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","file":"service-service-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>#</th>\\n                    <th>Title</th>\\n                    <th>Description</th>\\n                    <th>Price</th>\\n                    <th>Service Type</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tbody *ngIf=\\\"services?.length != 0\\\">\\n                  <tr *ngFor=\\\"let service of services; let i = index\\\">\\n                    <td>{{ i + 1 }}</td>\\n                    <td>{{ service.title }}</td>\\n                    <td>{{ service.description }}</td>\\n                    <td>{{ service.price }}</td>\\n                    <td>{{ service.service_types[0].name }}</td>\\n                    <td>\\n                        <a routerLink=\\\"../edit/{{service.id}}\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                        <a href=\\\"javascript:;\\\" (click)=\\\"deleteService(service.id)\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n                <tbody *ngIf=\\\"services?.length == 0\\\">\\n                    <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">No data!</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateServiceComponent } from './create-service/create-service.component';\nimport { ServicesComponent } from './services/services.component';\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    data: {\n      title: 'Services'\n    },\n    children:[\n      {\n        path:'all',\n        component:ServicesComponent,\n        data: {\n          title: 'All Services'\n        }\n      },\n      {\n        path:\"edit/:id\",\n        component:CreateServiceComponent,\n        data: {\n          title: 'Update Service'\n        }\n      },\n      {\n        path:'create',\n        component:CreateServiceComponent,\n        data: {\n          title: 'Create Service'\n        }\n      },\n      {\n        path:'',\n        redirectTo:\"all\"\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServiceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServiceRoutingModule } from './service-routing.module';\nimport { CreateServiceComponent } from './create-service/create-service.component';\nimport { ServicesComponent } from './services/services.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataTablesModule } from \"angular-datatables\";\n\n\n@NgModule({\n  declarations: [CreateServiceComponent, ServicesComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    ServiceRoutingModule\n  ]\n})\nexport class ServiceModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhdGUtc2VydmljZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJ2aWNlcy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AdminService } from '../../admin.service';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent implements OnInit,OnDestroy {\n  dtOptions : DataTables.Settings = {};\n  dtTrigger : Subject<any>        = new Subject<any>();\n  services  : any                 = [];\n  dtInitial : boolean             = false\n  constructor(\n    private as:AdminService\n  ) { }\n\n  ngOnInit(): void {\n    this.getServices();\n  }\n\n  getServices(){\n    this.as.getAllServices().subscribe((res)=>{\n      this.services = res.services;\n      this.dtTrigger.next();\n    },\n    (error)=>{\n      console.log(error);\n    })\n  }\n\n  deleteService(id){\n    this.as.deleteServiceById(id).subscribe((res)=>{\n      console.log(res);\n      this.getServices();\n    },\n    (error)=>{\n      console.log(error);\n    })\n  }\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <form [formGroup]=\\\"serviceForm\\\" (submit)=\\\"createService()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"title\\\">Title:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Title\\\" id=\\\"title\\\" formControlName=\\\"title\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"description\\\">Description:</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"description\\\" formControlName=\\\"description\\\"></textarea>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"price\\\">Price:</label>\\n                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Price\\\" id=\\\"price\\\" formControlName=\\\"price\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"service_type\\\">Select Service Type:</label>\\n                    <select class=\\\"form-control\\\" id=\\\"service_type\\\" formControlName=\\\"service_type\\\">\\n                      <option value=\\\"Private Sector\\\">Private Sector</option>\\n                      <option value=\\\"Federal\\\">Federal</option>\\n                    </select>\\n                </div>\\n                  \\n                <button type=\\\"submit\\\" [disabled]=\\\"!serviceForm.valid\\\" class=\\\"btn btn-success float-right\\\">{{btnText}}</button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from '../../admin.service';\n\n@Component({\n  selector: 'app-create-service',\n  templateUrl: './create-service.component.html',\n  styleUrls: ['./create-service.component.scss']\n})\nexport class CreateServiceComponent implements OnInit {\n\n  public serviceForm = this.fb.group({\n    id           : [null],\n    title        : ['',[Validators.required]],\n    description  : ['',[Validators.required]],\n    price        : ['',[Validators.required]],\n    service_type : ['',[Validators.required]]\n  });\n\n  public btnText = 'Submit';\n\n  constructor(\n    private fb    : FormBuilder,\n    private as    : AdminService,\n    private router: ActivatedRoute,\n    private route : Router,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit(): void {\n    let id = this.router.snapshot.paramMap.get(\"id\");\n    if(id){\n      this.getService(id);\n    }\n  }\n\n  createService(){\n    let service = this.serviceForm.value;\n    if(service.id){\n      this.as.updateService(service).subscribe((res)=>{\n        this.toastr.success('Service Updated Successfully', 'Success');\n        this.route.navigateByUrl(\"/admin/service/all\");\n      },\n      (error)=>{\n        console.log(error);\n      })\n    }else{\n      this.as.createService(service).subscribe((res)=>{\n        this.toastr.success('Service Created Successfully', 'Success');\n        this.route.navigateByUrl(\"/admin/service/all\");\n      },\n      (error)=>{\n        console.log(error);\n      });\n    }\n    \n  }\n\n  getService(id){\n    this.as.getServiceById(id).subscribe((res)=>{\n      let service = res.service;\n      this.serviceForm.patchValue({\n        id          : service.id,\n        title       : service.title,\n        description : service.description,\n        price       : service.price,\n        service_type: service.service_types[0].name\n      });\n      this.btnText = \"Update\";\n    },\n    (error)=>{\n      console.log(error);\n    })\n  }\n\n}\n"]}