(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~critique-critique-module~order-order-module~views-dashboard-dashboard-module"],{

/***/ "VGjC":
/*!**************************************!*\
  !*** ./src/app/user/user.service.ts ***!
  \**************************************/
/*! exports provided: UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "IheW");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../environments/environment */ "AytR");




let UserService = class UserService {
    constructor(http) {
        this.http = http;
        this.baseUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].baseUrl;
    }
    // Orders Calls
    getOrderById(id) {
        let token = localStorage.getItem("userToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-order/${id}`, { headers });
    }
    getOrdersByUser() {
        let token = localStorage.getItem("userToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-orders-by-user`, { headers });
    }
    uploadAnswersFile(order) {
        let token = localStorage.getItem("userToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/upload-answers`, order, { headers });
    }
    // Orders Calls End
    // Critiques Calls
    getCritiqueById(id) {
        let token = localStorage.getItem("userToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-critique/${id}`, { headers });
    }
    getCritiquesByUser() {
        let token = localStorage.getItem("userToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-critiques-by-user`, { headers });
    }
};
UserService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] }
];
UserService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
], UserService);



/***/ }),

/***/ "l3fW":
/*!****************************************!*\
  !*** ./src/app/admin/admin.service.ts ***!
  \****************************************/
/*! exports provided: AdminService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminService", function() { return AdminService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "IheW");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../environments/environment */ "AytR");




let AdminService = class AdminService {
    constructor(http) {
        this.http = http;
        this.baseUrl = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].baseUrl;
    }
    // Authentications Calls
    login(user) {
        return this.http.post(`${this.baseUrl}/login`, user);
    }
    getAdmin() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/user`, { headers });
    }
    // Authentications Calls End
    // Blogs Calls
    createBlog(blog) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/create-blog`, blog, { headers });
    }
    updateBlog(blog) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/update-blog`, blog, { headers });
    }
    getAllBlogs() {
        return this.http.get(`${this.baseUrl}/get-blogs`);
    }
    getBlogById(id) {
        return this.http.get(`${this.baseUrl}/get-blog/${id}`);
    }
    deleteBlogById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/delete-blog/${id}`, { headers });
    }
    // Blogs Calls End
    // Services Calls
    createService(service) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/create-service`, service, { headers });
    }
    updateService(service) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/update-service`, service, { headers });
    }
    getAllServices() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-services`, { headers });
    }
    getServiceById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-service/${id}`, { headers });
    }
    deleteServiceById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/delete-service/${id}`, { headers });
    }
    // Services Calls End
    // Packages Calls
    createPackage(pkg) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/create-package`, pkg, { headers });
    }
    updatePackage(pkg) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/update-package`, pkg, { headers });
    }
    getAllPackages() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-packages`, { headers });
    }
    getPackageById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-package/${id}`, { headers });
    }
    deletePackageById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/delete-package/${id}`, { headers });
    }
    // Packages Calls End
    // Testimonials Calls
    createTestimonial(testimonial) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/create-testimonial`, testimonial, { headers });
    }
    updateTestimonial(testimonial) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/update-testimonial`, testimonial, { headers });
    }
    getAllTestimonials() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-testimonials`, { headers });
    }
    getTestimonialById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-testimonial/${id}`, { headers });
    }
    deleteTestimonialById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/delete-testimonial/${id}`, { headers });
    }
    // Testimonials Calls End
    // Orders Calls
    getAllOrders() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-orders`, { headers });
    }
    getOrderById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-order/${id}`, { headers });
    }
    uploadQuestionFile(order) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/upload-questions`, order, { headers });
    }
    updateOrder(order) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/update-order`, order, { headers });
    }
    // Orders Calls End
    // Orders Calls
    getAllCritiques() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-critiques`, { headers });
    }
    getCritiqueById(id) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-critique/${id}`, { headers });
    }
    getCritiquesByUser() {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.get(`${this.baseUrl}/get-critiques-by-user`, { headers });
    }
    updateCritique(critique) {
        let token = localStorage.getItem("adminToken");
        let headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
        headers = headers.set('Authorization', `Bearer ${token}`);
        return this.http.post(`${this.baseUrl}/update-critique`, critique, { headers });
    }
};
AdminService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] }
];
AdminService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
], AdminService);



/***/ })

}]);
//# sourceMappingURL=default~critique-critique-module~order-order-module~views-dashboard-dashboard-module-es2015.js.map